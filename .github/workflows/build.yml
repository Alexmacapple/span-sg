name: Build SPAN

on:
  push:
    branches: [main, draft]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy-draft:
    if: github.ref == 'refs/heads/draft'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements-dsfr.txt

      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Black formatter check
        run: python -m black --check scripts/

      - name: Run Ruff linter
        run: python -m ruff check scripts/

      - name: Run unit tests
        run: python -m pytest scripts/ -v --cov=scripts --cov-report=term-missing

      - name: Run production scripts coverage check (89%+ required)
        run: |
          python -m pytest \
            --cov=scripts \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-fail-under=89 \
            scripts/test_calculate_scores*.py scripts/test_enrich_pdf*.py

      - name: Calculate SPAN scores
        run: python scripts/calculate_scores.py

      - name: Build site DSFR
        run: mkdocs build --config-file mkdocs-dsfr.yml --strict

      - name: Verify DSFR theme in build
        run: |
          echo "=== Vérification DSFR ==="
          if grep -q "writer-html5" site/index.html; then
            echo "❌ ERREUR: HTML contient ReadTheDocs au lieu de DSFR!"
            head -20 site/index.html
            exit 1
          elif grep -q "data-fr-scheme" site/index.html; then
            echo "✅ OK: HTML contient DSFR"
            head -5 site/index.html
          else
            echo "⚠️  WARNING: Thème indéterminé"
            head -20 site/index.html
            exit 1
          fi

      - name: Install WeasyPrint system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libpango-1.0-0 \
            libpangoft2-1.0-0 \
            libpangocairo-1.0-0 \
            libcairo2 \
            libffi-dev \
            libgdk-pixbuf2.0-0 \
            libharfbuzz-dev \
            shared-mime-info

      - name: Generate PDF (DSFR)
        env:
          ENABLE_PDF_EXPORT: "1"
        run: |
          mkdir -p exports
          mkdocs build --config-file mkdocs-dsfr-pdf.yml

      - name: Enrich PDF metadata
        run: python scripts/enrich_pdf_metadata.py exports/span-sg.pdf

      - name: Install qpdf
        run: |
          sudo apt-get update
          sudo apt-get install -y qpdf

      - name: Validate PDF
        run: |
          qpdf --check exports/span-sg.pdf
          ls -lh exports/span-sg.pdf
          echo "PDF size: $(du -h exports/span-sg.pdf | cut -f1)"

      - name: Upload PDF artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: exports-draft
          path: exports/

      - name: Deploy draft to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          destination_dir: draft
          keep_files: false

  build-and-deploy-main:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements-dsfr.txt

      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Black formatter check
        run: python -m black --check scripts/

      - name: Run Ruff linter
        run: python -m ruff check scripts/

      - name: Run unit tests
        run: python -m pytest scripts/ -v --cov=scripts --cov-report=term-missing

      - name: Run production scripts coverage check (89%+ required)
        run: |
          python -m pytest \
            --cov=scripts \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-fail-under=89 \
            scripts/test_calculate_scores*.py scripts/test_enrich_pdf*.py

      - name: Calculate SPAN scores
        run: python scripts/calculate_scores.py

      - name: Build site DSFR
        run: mkdocs build --config-file mkdocs-dsfr.yml --strict

      - name: Verify DSFR theme in build
        run: |
          echo "=== Vérification DSFR ==="
          if grep -q "writer-html5" site/index.html; then
            echo "❌ ERREUR: HTML contient ReadTheDocs au lieu de DSFR!"
            head -20 site/index.html
            exit 1
          elif grep -q "data-fr-scheme" site/index.html; then
            echo "✅ OK: HTML contient DSFR"
            head -5 site/index.html
          else
            echo "⚠️  WARNING: Thème indéterminé"
            head -20 site/index.html
            exit 1
          fi

      - name: Install WeasyPrint system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libpango-1.0-0 \
            libpangoft2-1.0-0 \
            libpangocairo-1.0-0 \
            libcairo2 \
            libffi-dev \
            libgdk-pixbuf2.0-0 \
            libharfbuzz-dev \
            shared-mime-info

      - name: Generate PDF (DSFR)
        env:
          ENABLE_PDF_EXPORT: "1"
        run: |
          mkdir -p exports
          mkdocs build --config-file mkdocs-dsfr-pdf.yml

      - name: Enrich PDF metadata
        run: python scripts/enrich_pdf_metadata.py exports/span-sg.pdf

      - name: Install qpdf and system dependencies for E2E
        run: |
          sudo apt-get update
          sudo apt-get install -y qpdf

      - name: Validate PDF
        run: |
          qpdf --check exports/span-sg.pdf
          ls -lh exports/span-sg.pdf
          echo "PDF size: $(du -h exports/span-sg.pdf | cut -f1)"

      - name: Run E2E tests with reporting
        run: |
          chmod +x tests/e2e/ci_runner.sh
          ./tests/e2e/ci_runner.sh

      - name: Upload E2E report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: tests/e2e/reports/e2e-report.html
          retention-days: 30

      - name: Upload PDF artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: exports-main
          path: exports/

      - name: Deploy production to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          force_orphan: true
