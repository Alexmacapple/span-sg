name: Build SPAN

on:
  push:
    branches: [main, draft]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements-dsfr.txt

      - name: Install dev dependencies
        run: pip install -r requirements-dev.txt

      - name: Run Black formatter check
        run: python -m black --check scripts/

      - name: Run Ruff linter
        run: python -m ruff check scripts/

      - name: Run unit tests
        run: python -m pytest scripts/ -v --cov=scripts --cov-report=term-missing

      - name: Run production scripts coverage check (89%+ required)
        run: |
          python -m pytest \
            --cov=scripts \
            --cov-report=term-missing \
            --cov-report=html \
            --cov-fail-under=89 \
            scripts/test_calculate_scores*.py scripts/test_enrich_pdf*.py

      - name: Calculate SPAN scores
        run: python scripts/calculate_scores.py

      - name: Build site DSFR
        run: mkdocs build --config-file mkdocs-dsfr.yml --strict

      - name: Generate PDF (DSFR - temporairement désactivé)
        run: |
          echo "PDF generation disabled - WeasyPrint system deps required"
          mkdir -p site/exports exports
          echo "PDF DSFR en cours d'implémentation" > site/exports/span-sg.pdf
          cp site/exports/span-sg.pdf exports/
        continue-on-error: true

      - name: Upload artifacts
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: span-site
          path: |
            site/
            exports/

      - name: Upload PDF artifact
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: exports
          path: exports/

  e2e-tests:
    name: Tests E2E
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install -r requirements-dsfr.txt

      - name: Install system dependencies (qpdf)
        run: |
          sudo apt-get update
          sudo apt-get install -y qpdf

      - name: Run E2E tests with reporting
        run: |
          chmod +x tests/e2e/ci_runner.sh
          ./tests/e2e/ci_runner.sh

      - name: Upload E2E report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: e2e-report
          path: tests/e2e/reports/e2e-report.html
          retention-days: 30

      - name: Comment PR with E2E results
        if: github.event_name == 'pull_request' && failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Tests E2E échoués. Voir rapport dans artifacts.'
            })

  deploy_draft:
    if: github.ref == 'refs/heads/draft'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: span-site

      - name: Deploy draft to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          destination_dir: draft
          keep_files: true

  deploy_main:
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: span-site

      - name: Deploy production to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
          publish_branch: gh-pages
          force_orphan: true
